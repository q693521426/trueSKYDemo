enum IDC_UI_ID
{
	IDC_SKY_FRAMER_START					,
	
	IDC_SKY_TIME							,
	
	IDC_ANIMATION_TIME_STEP					,

	IDC_SKY_FRAME_START						,

	IDC_SKY_MIE 							,
	IDC_SKY_HAZE 							,
	IDC_SKY_HAZEBASEKM 						,
	IDC_SKY_HAZESCALEKM 					,
	IDC_SKY_HAZEECCENTRICITY 				,
	IDC_SKY_SUNAZIMUTH 						,
	IDC_SKY_SUNELEVATION					,
	IDC_SKY_MOONELEVATION					,
	IDC_SKY_MOONAZIMUTH 					,
											
	IDC_SKY_SEALEVELTEMPERATUREK			,
	IDC_SKY_STOREASCOLOURS 					,
	IDC_SKY_HORIZON							,
	IDC_SKY_ZENITH							,
	IDC_SKY_SUNLIGHT						,
	IDC_SKY_HAZECOLOUR						,
											
	IDC_SKY_AUTOMIE							,
											
	IDC_SKY_AUTOMATICSUNPOSITION			,
	IDC_SKY_AUTOMATICMOONPOSITION			,
	
	IDC_SKY_LATITUDERADIANS					,
	IDC_SKY_LONGITUDERADIANS				,
	IDC_SKY_MAXSTARMAGNITUDE				,
	IDC_SKY_STARBRIGHTNESS					,
	IDC_SKY_BACKGROUNDBRIGHTNESS			,
	IDC_SKY_MAXDISTANCEKM					,
	IDC_SKY_MAXALTITUDEKM					,
	IDC_SKY_OVERCASTEFFECTSTRENGTH			,
	IDC_SKY_TIMEZONEHOURS					,
	IDC_SKY_SUNRADIUSARCMINUTES				,
	IDC_SKY_MOONRADIUSARCMINUTES			,
	IDC_SKY_BRIGHTNESSPOWER					,

	IDC_CLOUD_FRAME_START					,

	IDC_CLOUD_CLOUDINESS 					,
	IDC_CLOUD_DISTRIBUTION_BASE_LAYER 		,
	IDC_CLOUD_DISTRIBUTION_TRANSITION 		,
	IDC_CLOUD_UPPER_DENSITY 				,
	IDC_CLOUD_WIND_SPEED 					,
	IDC_CLOUD_WIND_DIRECTION 				,
	IDC_CLOUD_BASE_KM 						,
	IDC_CLOUD_HEIGHT_KM 					,
	IDC_CLOUD_WIDTH_KM 						,
	IDC_CLOUD_DIRECT_LIGHT 					,
	IDC_CLOUD_INDIRECT_LIGHT 				,
	IDC_CLOUD_AMBIENT_LIGHT 				,
	IDC_CLOUD_LIGHT_ASYMMETRY 				,
	IDC_CLOUD_OCTAVES 						,
	IDC_CLOUD_PERSISTENCE 					,
	IDC_CLOUD_FRACTAL_AMPLITUDE 			,
	IDC_CLOUD_FRACTAL_WAVELENGTH 			,
											
	IDC_CLOUD_EDGE_SHARPNESS				,
	IDC_CLOUD_CHURN 						,
	IDC_CLOUD_EXTINCTION 					,
	IDC_CLOUD_PRECIPITATION 				,
	IDC_CLOUD_RAIN_TO_SNOW 					,
	IDC_CLOUD_PRECIPITATION_WIND_EFFECT		,
	IDC_CLOUD_PRECIPITATION_WAVER 			,
	IDC_CLOUD_DIFFUSIVITY 					,
											
	IDC_CLOUD_GODRAY_STRENGTH 				,
	IDC_CLOUD_BASE_NOISE_FACTOR 			,
	IDC_CLOUD_OFFSETX 						,
	IDC_CLOUD_OFFSETY 						,
	IDC_CLOUD_OCTAVES_F 					,
	IDC_CLOUD_SIMULATION 					,
	IDC_CLOUD_WORLEY_NOISE 					,
	IDC_CLOUD_WORLEY_SCALE 					,
	IDC_CLOUD_EDGE_WORLEY_NOISE 			,
	IDC_CLOUD_EDGE_WORLEY_SCALE 			,
	
	IDC_CLOUD_FRAMER_START					,

	IDC_CLOUD_EDGE_NOISE_OCTAVES			,
	IDC_CLOUD_EDGE_NOISE_FREQUENCY			,
	IDC_CLOUD_EDGE_NOISE_TEXTURE_SIZE		,

	IDC_CLOUD2D_FRAME_START					,

	IDC_CLOUD2D_CLOUDINESS 					,
	IDC_CLOUD2D_DISTRIBUTION_BASE_LAYER 	,
	IDC_CLOUD2D_DISTRIBUTION_TRANSITION 	,
	IDC_CLOUD2D_UPPER_DENSITY 				,
	IDC_CLOUD2D_WIND_SPEED 					,
	IDC_CLOUD2D_WIND_DIRECTION 				,
	IDC_CLOUD2D_BASE_KM 					,
	IDC_CLOUD2D_HEIGHT_KM 					,
	IDC_CLOUD2D_WIDTH_KM 					,
	IDC_CLOUD2D_DIRECT_LIGHT 				,
	IDC_CLOUD2D_INDIRECT_LIGHT 				,
	IDC_CLOUD2D_AMBIENT_LIGHT 				,
	IDC_CLOUD2D_LIGHT_ASYMMETRY 			,
	IDC_CLOUD2D_OCTAVES 					,
	IDC_CLOUD2D_PERSISTENCE 				,
	IDC_CLOUD2D_FRACTAL_AMPLITUDE 			,
	IDC_CLOUD2D_FRACTAL_WAVELENGTH 			,
							
	IDC_CLOUD2D_EDGE_SHARPNESS				,
	IDC_CLOUD2D_CHURN 						,
	IDC_CLOUD2D_EXTINCTION 					,
	IDC_CLOUD2D_PRECIPITATION 				,
	IDC_CLOUD2D_RAIN_TO_SNOW 				,
	IDC_CLOUD2D_PRECIPITATION_WIND_EFFECT	,
	IDC_CLOUD2D_PRECIPITATION_WAVER 		,
	IDC_CLOUD2D_DIFFUSIVITY 				,
					
	IDC_CLOUD2D_GODRAY_STRENGTH 			,
	IDC_CLOUD2D_BASE_NOISE_FACTOR 			,
	IDC_CLOUD2D_OFFSETX 					,
	IDC_CLOUD2D_OFFSETY 					,
	IDC_CLOUD2D_OCTAVES_F 					,
	IDC_CLOUD2D_SIMULATION 					,
	IDC_CLOUD2D_WORLEY_NOISE 				,
	IDC_CLOUD2D_WORLEY_SCALE 				,
	IDC_CLOUD2D_EDGE_WORLEY_NOISE 			,
	IDC_CLOUD2D_EDGE_WORLEY_SCALE 			,
	
	IDC_CLOUD2D_FRAMER_START				,

	IDC_CLOUD2D_EDGE_NOISE_OCTAVES			,
	IDC_CLOUD2D_EDGE_NOISE_FREQUENCY		,
	IDC_CLOUD2D_EDGE_NOISE_TEXTURE_SIZE		,					


	IDC_ENV_LOAD_SQ							,
	IDC_LOAD_MODEL							,
	IDC_TRUE_SKY							,
	IDC_TRUESKY_PROFILE						,
	IDC_LOAD_CLOUD2D						,
	IDC_LOAD_CLOUD							,
	IDC_LOAD_SKY							,
	IDC_LOAD_ANIMATION						
};

const int IDC_STATIC_OFFSET		=		500;

struct UIAttr
{
	char* name;
	int min_UI;	
	int max_UI;	
	int scale_UI;	
	bool IsFloat;
	union
	{
		float floor_f;
		int	  floor_i;
	}floor;
	union
	{
		float ceil_f;
		int	  ceil_i;
	}ceil;
	UIAttr(){};
	UIAttr(const UIAttr& rhs)
	{
		memcpy(this,&rhs,sizeof(UIAttr));
	};
	UIAttr(char*name,int min,int max,int scale,int floor,int ceil):
		name(name),min_UI(min),max_UI(max),scale_UI(scale)
	{
		this->floor.floor_i=floor;
		this->ceil.ceil_i=ceil;
		this->IsFloat=false;
	};
	UIAttr(char*name,int min,int max,int scale,float floor,float ceil):
		name(name),min_UI(min),max_UI(max),scale_UI(scale)
	{
		this->floor.floor_f=floor;
		this->ceil.ceil_f=ceil;
		this->IsFloat=true;
	};
};